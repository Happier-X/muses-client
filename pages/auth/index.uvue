<template>
	<view class="flex-1">
	  <form @submit="onFormSubmit">
        <view>
          <text>服务地址</text>
          <input name="serviceUrl" :value="serviceUrl" placeholder="请输入服务地址" />
        </view>
		<view>
          <text>用户名</text>
          <input name="username" :value="username" placeholder="请输入用户名" />
        </view>
		<view>
          <text>密码</text>
          <input name="password" :value="password" placeholder="请输入密码" />
        </view>
        <view>
          <button form-type="submit" type="primary">登录</button>
        </view>
      </form>
	</view>
</template>

<script setup lang="uts">
import { login } from '@/api/auth'

type loginFormType = {
    serviceUrl: string,
    username: string,
    password: string
}

const serviceUrl = ref('')
const username = ref('')
const password = ref('')

const loginForm = ref<UTSJSONObject>({})

serviceUrl.value = uni.getStorageSync("serviceUrl") as string

const onFormSubmit = async(e: UniFormSubmitEvent) => {
    loginForm.value = e.detail.value
    uni.setStorageSync("serviceUrl", loginForm.value.serviceUrl as string)
    try {
        const res = await login({
          username: loginForm.value.username,
          password: loginForm.value.password
        })
        const resData = JSON.parseObject(JSON.stringify(res.data)) as UTSJSONObject
        uni.setStorageSync("accessToken", resData.accessToken as string)
        uni.setStorageSync("refreshToken", resData.refreshToken as string)
        uni.navigateTo({
          url: "/pages/tabBar/index"
        })
    } catch (error) {
      console.error('登录失败', error)
    }
}
</script>
