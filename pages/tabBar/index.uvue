<template>
  <view class="m-page">
    <m-navbar :title="tabList[selectedIndex].title" :left-arrow="false"></m-navbar>
    <view class="index-container">
      <home ref="homeRef" class="index-content" v-if="tabList[0].init"  :style="{visibility:(selectedIndex==0?'visible':'hidden')}"></home>
      <music ref="musicRef" class="index-content" v-if="tabList[1].init" :style="{visibility:(selectedIndex==1?'visible':'hidden')}"></music>
      <my ref="myRef" class="index-content" v-if="tabList[2].init" :style="{visibility:(selectedIndex==2?'visible':'hidden')}"></my>
    </view>
    <view class="bottom-placeholder"></view>
    <share-element class="bottom-share-element" share-key="playBar" :transitionOnGesture="true">
      <m-play-bar></m-play-bar>
    </share-element>
    <view class="tab-bar">
      <view class="tab-bar-item" @tap="handleTabClick(0)">
          <m-icon name="eeda"></m-icon>
          <text :class="selectedIndex == 0 ? 'text-blue-500' : ''">首页</text>
      </view>
      <view class="tab-bar-item" @tap="handleTabClick(1)">
          <m-icon name="f086"></m-icon>
          <text :class="selectedIndex == 1 ? 'text-blue-500' : ''">音乐</text>
      </view>
      <view class="tab-bar-item" @tap="handleTabClick(2)">
          <m-icon name="f454"></m-icon>
          <text :class="selectedIndex == 2 ? 'text-blue-500' : ''">我的</text>
      </view>
    </view>
  </view>
</template>

<script setup lang="uts">
import MNavbar from '@/components/ui/MNavbar.uvue'
import MPlayBar from '@/components/MPlayBar.uvue'
import MIcon from '@/components/ui/MIcon.uvue'
import Home from './home.uvue'
import Music from './music.uvue'
import My from './my.uvue'

type TabItem = {
  init : boolean,
  title : string,
}

const tabList = ref<TabItem[]>([
  {
    init: true,
    title: '首页'
  } as TabItem,
  {
    init: false,
    title: '音乐'
  } as TabItem,
  {
    init: false,
    title: '我的'
  } as TabItem,
])
const selectedIndex = ref(0)

const handleTabClick = (index: number) => {
  if (selectedIndex.value === index) {
    return
  }
  if (!tabList.value[index].init) {
    tabList.value[index].init = true
  }
  selectedIndex.value = index
}
</script>

<style lang="scss">
  .index-container {
    flex: 1;
    min-height: 0;
    .index-content{
      width: 100%;
      height: 100%;
      position: absolute;
    }
  }
  .bottom-placeholder {
    height: 72px;
  }
  .bottom-share-element {
    width: 100%;
    height: 72px;
    position: fixed;
    bottom: 56px;
  }
  .tab-bar {
    height: 56px;
    flex-direction: row;
    border-top: 1px solid #e5e7eb;
    background-color: #ffffff;
    align-items: center;
    justify-content: space-around;
    .tab-bar-item {
      flex: 1;
      align-items: center;
      justify-content: center;
    }
  }
</style>