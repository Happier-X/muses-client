<template>
  <view class="flex-1">
    <m-navbar :title="tabList[selectedIndex].title">
      <template #left>
        <view></view>
      </template>
    </m-navbar>
    <view class="flex-1 min-h-0">
      <home ref="homeRef" class="size-full absolute" v-if="tabList[0].init"  :style="{visibility:(selectedIndex==0?'visible':'hidden')}"></home>
      <music ref="musicRef" class="size-full absolute" v-if="tabList[1].init" :style="{visibility:(selectedIndex==1?'visible':'hidden')}"></music>
      <my ref="myRef" class="size-full absolute" v-if="tabList[2].init" :style="{visibility:(selectedIndex==2?'visible':'hidden')}"></my>
    </view>
    <view class="h-[72px]"></view>
    <share-element class="w-full h-[72px] fixed bottom-[56px]" share-key="playBar" :transitionOnGesture="true">
      <m-play-bar></m-play-bar>
    </share-element>
    <view class="h-[56px] flex-row">
      <view class="flex-1 items-center justify-center" @click="handleTabClick(0)">
          <m-icon name="eeda" :class="selectedIndex == 0 ? 'text-blue-500' : ''"></m-icon>
          <text :class="selectedIndex == 0 ? 'text-blue-500' : ''">首页</text>
      </view>
      <view class="flex-1 items-center justify-center" @click="handleTabClick(1)">
          <m-icon name="f086"  :class="selectedIndex == 1 ? 'text-blue-500' : ''"></m-icon>
          <text  :class="selectedIndex == 1 ? 'text-blue-500' : ''">音乐</text>
      </view>
      <view class="flex-1 items-center justify-center" @click="handleTabClick(2)">
          <m-icon name="f454" :class="selectedIndex == 2 ? 'text-blue-500' : ''"></m-icon>
          <text :class="selectedIndex == 2 ? 'text-blue-500' : ''">我的</text>
      </view>
    </view>
  </view>
</template>

<script setup lang="uts">
import MNavbar from '@/components/MNavbar.uvue'
import MIcon from '@/components/MIcon.uvue'
import MPlayBar from '@/components/MPlayBar.uvue'
import Home from './home.uvue'
import Music from './music.uvue'
import My from './my.uvue'

type TabItem = {
  init : boolean,
  title : string,
}

const tabList = ref<TabItem[]>([
  {
    init: true,
    title: '首页'
  } as TabItem,
  {
    init: false,
    title: '音乐'
  } as TabItem,
  {
    init: false,
    title: '我的'
  } as TabItem,
])
const selectedIndex = ref(0)

const handleTabClick = (index: number) => {
  if (selectedIndex.value === index) {
    return
  }
  if (!tabList.value[index].init) {
    tabList.value[index].init = true
  }
  selectedIndex.value = index
}
</script>
