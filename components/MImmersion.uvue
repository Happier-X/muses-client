<template>
	<m-popup v-model="visible" size="100%">
		<view :style="`height:100%; padding-top: ${statusBarHeight}px;`">
			<image class="cover" :src="`${serviceUrl}${playerCurrentSongDetail?.cover}`"></image>
			<view class="info">
				<text>{{ playerCurrentSongDetail?.title }}</text>
				<text>{{ playerCurrentSongDetail?.artist }}</text>
			</view>
			<view class="flex-1 min-h-0">
				<text>测试内容</text>
				<text>测试内容</text>
				<text>测试内容</text>
				<text>测试内容</text>
			</view>
			<slider></slider>
			<view></view>
			<m-icon
				:name="playerIsPlaying ? 'f0f6' : 'f148'"
				class="play-control-icon"
				@tap.stop="playerIsPlaying ? playerPause() : playerPlay()"
			></m-icon>
			<m-icon name="efb4" class="play-queue-icon" @tap.stop="handleShowPlayQueue()"></m-icon>
			<m-icon name="f2cc" class="play-queue-icon" @tap.stop="playerPlayPrevious()"></m-icon>
			<m-icon name="f2ca" class="play-queue-icon" @tap.stop="playerPlayNext()"></m-icon>
			<m-icon :name="playerPlayMode === 'orderPlay' ? 'efba' : 'f2b8'" class="play-queue-icon" @tap.stop="playerChangePlayMode()"></m-icon>
			<m-icon :name="playerLoopMode === 'listLoop' ? 'f1ca' : 'f1cc'" class="play-queue-icon" @tap.stop="playerChangeLoopMode()"></m-icon>
		</view>
	</m-popup>
</template>
<script setup lang="uts">
import MPopup from '@/components/ui/MPopup.uvue'
import MIcon from '@/components/ui/MIcon.uvue'
import { playerCurrentSongDetail, playerIsPlaying, playerPause, playerPlay, playerPlayNext, playerPlayPrevious, playerChangePlayMode, playerChangeLoopMode ,playerPlayMode,playerLoopMode} from '@/stores/player'
import MPlayQueue from '@/components/MPlayQueue.uvue'

const visible = ref(false)
const show = ()=>{
    visible.value = true
}
const instance = getCurrentInstance()!.proxy!
const { statusBarHeight } = uni.getWindowInfo();
const serviceUrl = computed(()=>uni.getStorageSync("serviceUrl") ?? "")
const handleShowPlayQueue = ()=>{
    (instance.$refs['playQueueRef'] as ComponentPublicInstance)?.$callMethod('show')
}
defineExpose({
    show
})
</script>

<style lang="scss">
.cover {
	width: 200px;
	height: 200px;
	border-radius: 8px;
}
.info {
	padding: 0 16px;
}
</style>
