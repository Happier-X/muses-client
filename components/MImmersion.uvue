<template>
	<m-popup v-model="visible" size="100%">
		<view class="m-immersion-container" :style="`padding-top: ${statusBarHeight}px;`">
			<image
				class="cover"
				:style="`width: ${windowWidth * 0.85}px;height: ${windowWidth * 0.85}px;`"
				:src="`${serviceUrl}${playerCurrentSongDetail?.cover}`"
				mode="aspectFit"
			></image>
			<view class="info">
				<text>{{ playerCurrentSongDetail?.title }}</text>
				<text>{{ playerCurrentSongDetail?.artist }}</text>
			</view>
			<view>
				<text>测试内容</text>
				<text>测试内容</text>
				<text>测试内容</text>
			</view>
			<view style="width: 100%">
				<slider></slider>
			</view>
			<view class="play-control-bar">
				<m-icon :size="32" name="f2cc" @tap.stop="playerPlayPrevious()"></m-icon>
				<m-icon
					:size="40"
					:name="playerIsPlaying ? 'f0f6' : 'f148'"
					@tap.stop="playerIsPlaying ? playerPause() : playerPlay()"
				></m-icon>
				<m-icon :size="32" name="f2ca" @tap.stop="playerPlayNext()"></m-icon>
			</view>
			<view class="other-control-bar">
				<m-icon
					:size="24"
					:name="playerPlayMode === 'orderPlay' ? 'efbb' : 'f2b9'"
					@tap.stop="playerChangePlayMode()"
				></m-icon>
				<m-icon
					:size="24"
					:name="playerLoopMode === 'listLoop' ? 'f1cb' : 'f1cd'"
					@tap.stop="playerChangeLoopMode()"
				></m-icon>
				<m-icon :size="24" name="efb5" @tap.stop="handleShowPlayQueue()"></m-icon>
				<m-icon :size="24" name="f065"></m-icon>
			</view>
		</view>
	</m-popup>
</template>
<script setup lang="uts">
import MPopup from '@/components/ui/MPopup.uvue'
import MIcon from '@/components/ui/MIcon.uvue'
import { playerCurrentSongDetail, playerIsPlaying, playerPause, playerPlay, playerPlayNext, playerPlayPrevious, playerChangePlayMode, playerChangeLoopMode ,playerPlayMode,playerLoopMode} from '@/stores/player'
import MPlayQueue from '@/components/MPlayQueue.uvue'

const visible = ref(false)
const show = ()=>{
    visible.value = true
}
const instance = getCurrentInstance()!.proxy!
const { statusBarHeight,windowWidth } = uni.getWindowInfo();
const serviceUrl = computed(()=>uni.getStorageSync("serviceUrl") ?? "")
const handleShowPlayQueue = ()=>{
    (instance.$refs['playQueueRef'] as ComponentPublicInstance)?.$callMethod('show')
}
defineExpose({
    show
})
</script>

<style lang="scss">
.m-immersion-container {
	align-items: center;
	width: 100%;
	height: 100%;
	padding: 0 7.5%;
	.cover {
		border-radius: 12px;
	}
	.info {
		padding: 0 16px;
	}
	.play-control-bar {
		width: 100%;
		flex-direction: row;
		align-items: center;
		justify-content: space-around;
	}
	.other-control-bar {
		width: 100%;
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		margin-top: 16px;
	}
}
</style>
