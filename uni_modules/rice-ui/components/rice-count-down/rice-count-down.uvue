<template>
	<view :class="[ns.b(''),ns.theme()]" :style="customStyle">
		<slot :current="current">
			<text :class="ns.e('text')" :style="textStyle">{{timeValue}}</text>
		</slot>
	</view>
</template>

<script setup>
	/**
	 * @description CountDown 用于实时展示倒计时数值。
	 * @property {Number} time 倒计时时长，单位毫秒，
	 * @property {String} format 时间格式，默认 `HH:mm:ss`
	 * @property {Boolean} autoStart 是否自动开始倒计时，默认true
	 * @property {Boolean} millisecond 是否开启毫秒级渲染，默认 false
	 * @property {String|Number} fontSize 字体大小
	 * @property {String} color 字体颜色
	 * @property {Object} customStyle 自定义样式
	 */
	import { useCountDown, useNamespace, CurrentTime } from '../../libs/use';
	import { addUnit, padZero, hasStrValue } from "../../libs/utils"
	import { formatTime } from "./utils"
	import { CountDownProps } from "./type.uts"

	defineOptions({
		name: 'rice-count-down'
	})

	defineSlots<{
		default(props : { current : CurrentTime }) : any
	}>()

	const emit = defineEmits<{
		change : [current: CurrentTime],
		finish : [],
	}>()

	const ns = useNamespace('count-down')
	const props = withDefaults(defineProps<CountDownProps>(), {
		time: 0,
		format: 'HH:mm:ss',
		autoStart: true,
		millisecond: false,
		customStyle: () : UTSJSONObject => ({})
	})

	const { current, start, pause, reset } = useCountDown({
		time: props.time,
		millisecond: props.millisecond,
		onChange: (current : CurrentTime) => emit('change', current),
		onFinish: () => emit('finish')
	})

	const timeValue = computed(() => formatTime(props.format, current.value))

	const resetTime = () => {
		reset(props.time)
		if (props.autoStart) {
			start()
		}
	}

	watch(() : number => props.time, () => {
		resetTime()
	}, {
		immediate: true
	})

	const textStyle = computed(() => {
		const css = new Map<string, string>()
		if (hasStrValue(props.fontSize)) {
			css.set('font-size', addUnit(props.fontSize!))
		}
		if (hasStrValue(props.color)) {
			css.set('color', props.color!)
		}
		return css
	})

	defineExpose({
		//兼容 Android的写法
		start: () => start(),
		pause: () => pause(),
		reset: resetTime
	})
</script>

<style scoped lang="scss">
	.rice-count-down {
		&__text {
			font-size: var(--rice-font-size-basic);
			color: var(--rice-text-color);
		}
	}
</style>